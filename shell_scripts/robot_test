#!/bin/bash

killall gzserver -9 >/dev/null 2>&1

cd ~
DIRECTORY="iti0201"

if [ "$#" -lt 3 ]; then
    echo "USAGE: robot_test [uni-id] [exercise_number] [map_number]"
    echo "You can also add optional arguments of [sonar_noise], [gyro_noise], [wait_time], [x] and [y] and [yaw]"
    exit 0
fi

git_user_name=$1
exercise_number=$2
map_number=$3

sonar_noise=0
gyro_noise=0
waiting_time=20

yaw_start=0

for i in "$@"
do
case $i in
    -s=*|--sonar=*)
    sonar_noise="${i#*=}"
    shift # past argument=value
    ;;
    -g=*|--gyro=*)
    gyro_noise="${i#*=}"
    shift # past argument=value
    ;;
    -w=*|--wait=*)
    waiting_time="${i#*=}"
    shift # past argument=value
    ;;
    -x=*|--xstart=*)
    x_start="${i#*=}"
    shift # past argument=value
    ;;
    -y=*|--ystart=*)
    y_start="${i#*=}"
    shift # past argument=value
    ;;
    -Y=*|--yawstart=*)
    yaw_start="${i#*=}"
    shift # past argument=value
    ;;
    --default)
    DEFAULT=YES
    shift # past argument with no value
    ;;
    *)
          # unknown option
    ;;
esac
done

git_address="https://$git_user_name@gitlab.cs.ttu.ee/$git_user_name/$DIRECTORY.git"

echo $git_address

# rm -rf $DIRECTORY # Temporary hack for when the iti0201 repo already exists, will be fixed soon

if [ -d "$DIRECTORY" ]; then
    echo "Repository already exists. Updating.."
    cd $DIRECTORY
    git pull
else
    echo "Repository doesn't exist yet. Creating one now..."
    git clone $git_address
    cd $DIRECTORY
fi

exercise_name=""
directory_name=""

if [ -d "$exercise_number" ]; then
    cd $exercise_number
else
    echo "Your files do not contain the $exercise_number folder."
    exit 1
fi

if ! [ -f "robot.py" ]; then
    echo "Your directory $exercise_number folder does not contain the necessary robot.py file."
    exit 1
fi

if [[ -z "$x_start" || -z "$y_start" ]]; then
    echo "x and y not set, loading default position"
else
    map_number+="_custom"
    echo "$map_number"
fi

x-terminal-emulator -e roslaunch lego_gazebo lego.launch dir:=$exercise_number map:=$map_number sonar_noise:=$sonar_noise gyro_noise:=$gyro_noise

if [[ -z "$x_start" || -z "$y_start" ]]; then
    echo "spawning model at default location"
else
    echo "spawning model at specified location"
    x-terminal-emulator -e rosrun gazebo_ros spawn_model -file `rospack find lego_gazebo`/../../../models/lego_mindstorm/model.sdf -sdf -x "$x_start" -y "$y_start" -Y "$yaw_start" -model lego_robot 
fi

x-terminal-emulator -e script_launch ~/$DIRECTORY/$exercise_number $waiting_time

#roslaunch lego_gazebo lego_$exercise_name.launch
